#version=RHEL8

# Do not use graphical install
text

# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

# Partition clearing information
clearpart --all --drives={{ hostvars[item]['disk'] }}
# Partitioning
ignoredisk --only-use={{ hostvars[item]['disk'] }}
reqpart
partition / --fstype=ext4 --encrypted --size=65536 --maxsize=131072 --grow --fsoptions=discard,noatime --passphrase=temppass
partition swap --recommended --encrypted --fsoptions=discard --passphrase=temppass

# Configure management network
# TODO: Remove; these hosts shouldn't be on the management network on non-IPMI interfaces
network --hostname={{ hostvars[item]['inventory_hostname'] }} --device=management --teamslaves={{ hostvars[item]['network']['bond_members'] | join(',') }} --teamconfig='{"runner":{"name": "lacp", "active": true, "fast_rate": true}}' --bootproto=dhcp --ipv6=auto --nodefroute --activate

# Configure server's primary network
network --device=management --interfacename=servers --vlanid=5 --bootproto=static --ip={{ hostvars[item]['ansible_host'] }} --gateway={{ hostvars[item]['network']['gateway'] }} --nameserver={{ hostvars[item]['network']['gateway'] }} --netmask={{ hostvars[item]['network']['netmask'] }} --ipv6=auto --activate

# Use network installation
repo --name="Minimal" --baseurl=http://{{ ansible_default_ipv4.address }}/os/Minimal
url --url="http://{{ ansible_default_ipv4.address }}/os"

# Disable Setup Agent on first boot
firstboot --disable
# Do not configure the X Window System
skipx
# Enable NTP
services --enabled="chronyd"
# System timezone
timezone {{ timezone }} --isUtc

# Create user (locked by default)
user --groups=wheel --name=admin
# Add SSH key
sshkey --username=root "{{ ssh_public_key }}"
# Disable root password login
rootpw --lock

# Disable SELinux
selinux --disabled

# Disable firewall
firewall --disabled

%packages
@^minimal-environment
clevis-dracut
clevis-luks
clevis-systemd
%end

%post
# unlock the root disk with TPM
# TODO: Investigate PCR stability and the practicality of using PCRs
clevis luks bind -y -k - -d "{{ hostvars[item]['disk'] }}-part2" \
    tpm2 '{}' <<< "temppass"
cryptsetup luksRemoveKey "{{ hostvars[item]['disk'] }}-part2" <<< "temppass"

# encrypt swap with a random key
swap_uuid="$(blkid -o value -s UUID "{{ hostvars[item]['disk'] }}-part3")"
swap_partuuid="$(blkid -o value -s PARTUUID "{{ hostvars[item]['disk'] }}-part3")"
swap_service_suffix="$(systemd-escape "luks-${swap_uuid}")"
sed --in-place=.ks-backup --regexp-extended "/\s+UUID=${swap_uuid}\s+/d" /etc/crypttab
printf "luks-%s /dev/disk/by-partuuid/%s swap,cipher=aes-cbc-essiv:sha256,size=256,discard\n" "${swap_uuid}" "${swap_partuuid}" >>/etc/crypttab

# after all of that, regenerate initramfs
dracut -fv --regenerate-all
%end

%post
echo "bpffs    /sys/fs/bpf    bpf    defaults    0 0" >>/etc/fstab
%end

reboot
