kube-prometheus-stack:
  alertmanager:
    annotations:
      # there are some issues with this resource not applying its configs correctly, so recreate it every time it changes
      argocd.argoproj.io/sync-options: Replace=true

    config:
      global:
        # Alerts without an end timeout after 5 minutes
        resolve_timeout: 5m

        # SMTP configuration
        smtp_smarthost: "smtp.smtp:25"
        smtp_hello: "alertmanager.cluster-home.johnson.computer"
        smtp_from: "Alert Manager <alertmanager@johnson.computer>"
        smtp_require_tls: false

      inhibit_rules:
        - source_matchers:
            - "severity = critical"
          target_matchers:
            - "severity =~ warning|info"
          equal:
            - "namespace"
            - "alertname"
        - source_matchers:
            - "severity = warning"
          target_matchers:
            - "severity = info"
          equal:
            - "namespace"
            - "alertname"
        - source_matchers:
            - "alertname = InfoInhibitor"
          target_matchers:
            - "severity = info"
          equal:
            - "namespace"

      route:
        group_by: ["namespace"]
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: "mj-email"
        routes:
          - receiver: "null"
            matchers:
              - alertname =~ "InfoInhibitor|Watchdog"

      receivers:
        - name: "mj-email"
          email_configs:
            - send_resolved: true
              to: "Mike Johnson <michael@johnson.gg>"
        - name: "null"

  grafana:
    adminPassword: null
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: Grafana
        hajimari.io/icon: chart-bar

        # only allow internal clients
        nginx.ingress.kubernetes.io/whitelist-source-range: 10.0.0.0/8
      hosts:
        - &host grafana.johnson.computer
      tls:
        - secretName: grafana-general-tls
          hosts:
            - *host
    additionalDataSources:
      - name: Loki
        type: loki
        url: http://loki.loki:3100
    envFromSecret: grafana-secrets
    grafana.ini:
      server:
        root_url: https://grafana.johnson.computer
      auth.generic_oauth:
        enabled: true
        allow_sign_up: true
        name: Dex
        client_id: grafana-sso
        client_secret: $__env{GRAFANA_SSO_CLIENT_SECRET}
        scopes: openid profile email groups
        auth_url: https://dex.johnson.computer/auth
        token_url: https://dex.johnson.computer/token
        api_url: https://dex.johnson.computer/userinfo

  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
